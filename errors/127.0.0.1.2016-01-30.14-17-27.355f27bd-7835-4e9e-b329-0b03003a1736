(dp1
S'output'
p2
S'missing "pass" in view'
p3
sS'layer'
p4
S'ParserContainer'
p5
sS'code'
p6
S'if auth.user_id is None:\n    response.write(\'\\n\\n\\n<h1>Find other people</h1>\\n\\n<div id="main_login">\\n\', escape=False)\n    response.write(A(\'Sign Up\', _class=\'btn btn-warning\', _href=URL(\'default\', \'user\', args=[\'register\'])))\n    response.write(\'\\n\', escape=False)\n    response.write(A(\'Sign In\', _class=\'btn btn-success\', _href=URL(\'default\', \'user\', args=[\'login\'])))\n    response.write(\'\\n</div>\\n\\n\\n\', escape=False)\n    response.write(\'\\n<header class="container-fluid background">\\n    <div class="jumbotron text-center">\\n    \', escape=False)\n    if response.title:\n        response.write(\'\\n        <h1>\', escape=False)\n        response.write(response.title)\n        response.write(\'\\n            <small>\', escape=False)\n        response.write(response.subtitle or \'\')\n        response.write(\'</small></h1>\\n    \', escape=False)\n        pass\n    response.write(\'\\n    </div>\\n</header>\\n\', escape=False)\n    response.write(\'\\n\\n\', escape=False)\n    if \'message\' in globals():\n        response.write(\'\\n<h2>\', escape=False)\n        response.write(message)\n        response.write(\'</h2>\\n<p class="lead">\', escape=False)\n        response.write(T(\'How did you get here?\'))\n        response.write(\'</p>\\n<ol>\\n    <li>\', escape=False)\n        response.write(T(\'You are successfully running web2py\'))\n        response.write(\'</li>\\n    <li>\', escape=False)\n        response.write(XML(T(\'You visited the url %s\', A(request.env.path_info,_href=request.env.path_info))))\n        response.write(\'</li>\\n    <li>\', escape=False)\n        response.write(XML(T(\'Which called the function %s located in the file %s\',\n        (A(request.function+\'()\',_href=\'#\'),\n        A(\'web2py/applications/%(application)s/controllers/%(controller)s.py\' % request,\n        _href=URL(\'admin\',\'default\',\'peek\', args=(request.application,\'controllers\',request.controller+\'.py\')))))))\n        response.write(\'</li>\\n    <li>\', escape=False)\n        response.write(XML(T(\'The output of the file is a dictionary that was rendered by the view %s\',\n        A(\'web2py/applications/%(application)s/views/%(controller)s/index.html\' % request,\n        _href=URL(\'admin\',\'default\',\'peek\',args=(request.application,\'views\',request.controller,\'index.html\'))))))\n        response.write(\'</li>\\n    <li>\', escape=False)\n        response.write(T(\'You can modify this application and adapt it to your needs\'))\n        response.write(\'</li>\\n</ol>\\n\', escape=False)\n    elif \'content\' in globals():\n        response.write(\'\\n\', escape=False)\n        response.write(content)\n        response.write(\'\\n\\n\', escape=False)\n    else:\n        response.write(\'\\n\\n\\n<h1>Tells us about you</h1>\\n\\n\', escape=False)\n        response.write(form)\n        response.write(\'\\n\\n\', escape=False)\n        pass\n    response.write(\'\\n\\n\', escape=False)\n    response.write(\'\\n<div class="panel panel-info">\\n    <div class="panel-heading"><h3 class="panel-title"><a class="btn-block"\\n                                                          href="\', escape=False)\n    response.write(URL(\'admin\',\'default\',\'index\'))\n    response.write(\'">\\n        <i class="glyphicon glyphicon-cog"></i>\\n    \', escape=False)\n    response.write(T("admin"))\n    response.write(\'\\n    </a></h3></div>\\n    <div class="panel-body">\\n    \', escape=False)\n    response.write(T("Don\'t know what to do?"))\n    response.write(\'\\n    </div>\\n    <ul class="list-group">\\n        <li class="list-group-item">\', escape=False)\n    response.write(A(T("Online examples"), _href=URL(\'examples\',\'default\',\'index\')))\n    response.write(\'</li>\\n        <li class="list-group-item"><a href="http://web2py.com">web2py.com</a></li>\\n        <li class="list-group-item"><a href="http://web2py.com/book">\', escape=False)\n    response.write(T(\'Documentation\'))\n    response.write(\'</a></li>\\n    </ul>\\n</div>\\n\', escape=False)\n    response.write(\'\\n\\n<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>Facebook Login JavaScript Example</title>\\n    <meta charset="UTF-8">\\n</head>\\n<body>\\n<script>\\n    // This is called with the results from from FB.getLoginStatus().\\n    function statusChangeCallback(response) {\\n        console.log(\\\'statusChangeCallback\\\');\\n        console.log(response);\\n        // The response object is returned with a status field that lets the\\n        // app know the current login status of the person.\\n        // Full docs on the response object can be found in the documentation\\n        // for FB.getLoginStatus().\\n        if (response.status === \\\'connected\\\') {\\n            // Logged into your app and Facebook.\\n            testAPI();\\n        } else if (response.status === \\\'not_authorized\\\') {\\n            // The person is logged into Facebook, but not your app.\\n            document.getElementById(\\\'status\\\').innerHTML = \\\'Please log \\\' +\\n                    \\\'into this app.\\\';\\n        } else {\\n            // The person is not logged into Facebook, so we\\\'re not sure if\\n            // they are logged into this app or not.\\n            document.getElementById(\\\'status\\\').innerHTML = \\\'Please log \\\' +\\n                    \\\'into Facebook.\\\';\\n        }\\n    }\\n\\n    // This function is called when someone finishes with the Login\\n    // Button.  See the onlogin handler attached to it in the sample\\n    // code below.\\n    function checkLoginState() {\\n        FB.getLoginStatus(function(response) {\\n            statusChangeCallback(response);\\n        });\\n    }\\n\\n    window.fbAsyncInit = function() {\\n        FB.init({\\n            appId      : \\\'466723666869305\\\',\\n            cookie     : true,  // enable cookies to allow the server to access\\n                                // the session\\n            xfbml      : true,  // parse social plugins on this page\\n            version    : \\\'v2.2\\\' // use version 2.2\\n        });\\n\\n        // Now that we\\\'ve initialized the JavaScript SDK, we call\\n        // FB.getLoginStatus().  This function gets the state of the\\n        // person visiting this page and can return one of three states to\\n        // the callback you provide.  They can be:\\n        //\\n        // 1. Logged into your app (\\\'connected\\\')\\n        // 2. Logged into Facebook, but not your app (\\\'not_authorized\\\')\\n        // 3. Not logged into Facebook and can\\\'t tell if they are logged into\\n        //    your app or not.\\n        //\\n        // These three cases are handled in the callback function.\\n\\n        FB.getLoginStatus(function(response) {\\n            statusChangeCallback(response);\\n        });\\n\\n    };\\n\\n    // Load the SDK asynchronously\\n    (function(d, s, id) {\\n        var js, fjs = d.getElementsByTagName(s)[0];\\n        if (d.getElementById(id)) return;\\n        js = d.createElement(s); js.id = id;\\n        js.src = "//connect.facebook.net/en_US/sdk.js";\\n        fjs.parentNode.insertBefore(js, fjs);\\n    }(document, \\\'script\\\', \\\'facebook-jssdk\\\'));\\n\\n    // Here we run a very simple test of the Graph API after login is\\n    // successful.  See statusChangeCallback() for when this call is made.\\n    function testAPI() {\\n        console.log(\\\'Welcome!  Fetching your information.... \\\');\\n        FB.api(\\\'/me\\\', function(response) {\\n            console.log(\\\'Successful login for: \\\' + response.name);\\n            document.getElementById(\\\'status\\\').innerHTML =\\n                    \\\'Thanks for logging in, \\\' + response.name + \\\'!\\\';\\n        });\\n    }\\n</script>\\n\\n<!--\\n  Below we include the Login Button social plugin. This button uses\\n  the JavaScript SDK to present a graphical Login button that triggers\\n  the FB.login() function when clicked.\\n-->\\n\\n<fb:login-button scope="public_profile,email" onlogin="checkLoginState();">\\n</fb:login-button>\\n\\n<div id="status">\\n</div>\\n\\n</body>\\n</html>\\n\', escape=False)'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'None\n'
p11
s.